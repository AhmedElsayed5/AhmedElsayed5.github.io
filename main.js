!function(){"use strict";class e{constructor(e,t,s,i,r,n,o){this._cardOwner=s,this._name=e.name,this._link=e.link,this._likeCount=e.likes.length,this._likes=e.likes,this._cardSelector=t,this._handleCardClick=i,this._handleDeleteClick=r,this._userId=e.owner._id,this._handleLikeClick=o,this._cardId=e._id}_setCardViewElements(){this._cardImage=this._element.querySelector(".card__image"),this._cardTitle=this._element.querySelector(".card__title"),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),"owner"!==this._cardOwner&&(this._deleteButton.hidden=!0),this._cardLikeCount=this._element.querySelector(".card__like-count")}_setCardView(){this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this.updateLikes(this._likes),this._cardLikeCount.textContent=0===this._likeCount?" ":this._likeCount}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeClick())),"owner"===this._cardOwner&&this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick()})),this._cardImage.addEventListener("click",(()=>{this._handleCardClick()}))}handleDeleteIcon(){this._element.remove(),this._element=null}setLikeInfo(e){this._likes=e.likes}updateLikes(){this._cardLikeCount.textContent=this._likes.length,this._likes.some((e=>e._id===this._userId))?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}_getTemplate(){return document.querySelector(this._cardSelector).content.cloneNode(!0).querySelector(".card")}getView(){return this._element=this._getTemplate(),this._setCardViewElements(),this._setCardView(),this._setEventListeners(),this._element}}class t{constructor(e,t){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=e,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_hideInputError=e=>{const t=this._form.querySelector(`.${e.id}-error`);console.log(e),e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""};_showInputError=e=>{const t=this._form.querySelector(`.${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)};_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_checkFormValidity(){return!this._inputList.every((e=>e.validity.valid))}_toggleButtonState(){this._checkFormValidity()?this.disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){this._modal=document.querySelector(e),this._closeButton=this._modal.querySelector(".modal__close-button")}open(){this._modal.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modal.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_closeModalWithOutsideClick(e){!e.target.closest(".modal__body")&&e.target.closest(".modal_opened")&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>this.close())),document.addEventListener("mousedown",(e=>this._closeModalWithOutsideClick(e)))}}class i extends s{constructor(e,t){super(e),this._modalForm=this._modal.querySelector("form"),this._handleFormSubmit=t,this._submitButton=this._modal.querySelector(".modal__save-button"),this._inputList=Array.from(this._modalForm.querySelectorAll(".modal__input"))}close(){this._modalForm.reset(),super.close()}_getInputValues(){this._inputList=Array.from(this._modalForm.querySelectorAll(".modal__input"));let e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}renderLoading(e,t){this._submitButton.textContent=e?"Loading...":t}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}class r{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}renderItems(){this._items.forEach(this._renderer)}}const n={formSelector:".form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},o=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getApiInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._checkResponse)}updateProfileInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._checkResponse)}addNewCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._checkResponse)}deleteUserCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}updateLikes(e){this._likes=e,this.renderLikes()}addCardLikes(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}removeCardLikes(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}updateProfileAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"95eecadc-0eb0-4813-b742-082777f22573","Content-Type":"application/json"}}),a=new class{constructor(e,t,s){this._profileName=document.querySelector(e),this._profileJob=document.querySelector(t),this._userAvatar=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent,avatar:this.getAvatar()}}setUserInfo(e){let{name:t,about:s,avatar:i}=e;this._profileName.textContent=t,this._profileJob.textContent=s,this.setAvatar(i)}setAvatar(e){this._userAvatar.alt=this.getUserInfo().name,this._userAvatar.src=e}getAvatar(){return this._userAvatar.src}}(".profile__title",".profile__description",".profile__image"),l=new i("#profile-modal",(e=>{l.renderLoading(!0),o.updateProfileInfo({name:e.name,about:e.about}).then((e=>{a.setUserInfo(e),l.close(),l.renderLoading(!1,"Save")})).catch((e=>console.log(e)))})),d=new i("#edit-avatar-modal",(e=>{d.renderLoading(!0),o.updateProfileAvatar(e.avatar).then((e=>{a.setAvatar(e.avatar),d.close(),d.renderLoading(!1,"Save")})).catch((e=>{console.log(e)})).finally((()=>{}))}));document.querySelector(".profile__image-edit").addEventListener("click",(function(){d.open(),d.setEventListeners(),h.disableButton()}));const h=new t(document.querySelector("#modal__form-edit-avatar"),n);h.enableValidation();const c=new class extends s{constructor(e){super(e),this._confirmButton=this._modal.querySelector(".delete-image-modal__button")}open(e){super.open(),this._id=e}setEventListeners(){super.setEventListeners(),this._confirmButton.addEventListener("click",(e=>{this._handleDeleteSubmit()}))}renderLoading(e){this._saveButton.textContent=e?"Loading...":"Yes"}setSubmitAction(e){this._handleDeleteSubmit=e}}("#delete-image-modal");let _;c.setEventListeners();const u=new class extends s{constructor(e){super(e),this._image=this._modal.querySelector(".modal__screen-image"),this._imageTitle=this._modal.querySelector(".modal__title-image")}open(e){let{name:t,link:s}=e;super.open(),this._image.src=s,this._image.alt=t,this._imageTitle.textContent=t}}("#image-modal");u.setEventListeners();const m=(t,s,i)=>{const r=new e(t,"#card",s,(()=>{u.open({name:t.name,link:t.link})}),(()=>{c.open(t._id),c.setSubmitAction((()=>{o.deleteUserCard(t._id).then((()=>{c.close(),r.handleDeleteIcon()}))}))}),i,(()=>{r._likes.some((e=>e._id===t.owner._id))?o.removeCardLikes(r._cardId).then((e=>{r.setLikeInfo(e),r.updateLikes()})).catch((e=>{console.log(e)})):o.addCardLikes(r._cardId).then((e=>{r.setLikeInfo(e),r.updateLikes()})).catch((e=>{console.log(e)}))}));return r.getView()},p=new i("#card-modal",(e=>{let{name:t,link:s}=e;p.renderLoading(!0),o.addNewCard({name:t,link:s}).then((e=>{_.addItem(m(e,"owner")),p.close(),p.renderLoading(!1,"Save")}))})),k=new t(document.querySelector("#formProfile"),n);k.enableValidation();const v=new t(document.querySelector("#modal__form-addCard"),n);v.enableValidation(),document.querySelector(".profile__edit-button").addEventListener("click",(function(){const e=a.getUserInfo(),t=document.querySelector("#name"),s=document.querySelector("#job");t.value=e.name,s.value=e.job,k.disableButton(),l.open()})),l.setEventListeners(),document.querySelector(".profile__add-button").addEventListener("click",(function(){v.disableButton(),p.open()})),p.setEventListeners(),o.getApiInfo().then((e=>{let[t,s]=e;a.setUserInfo(t),_=new r({items:s,renderer:function(e){_.addItem(m(e,e.owner._id===t._id?"owner":"non-owner",t))}},".cards__list"),_.renderItems()})).catch((e=>{console.error("Error fetching API info:",e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,